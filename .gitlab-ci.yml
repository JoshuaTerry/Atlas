stages:
  - build
  - quality
  - test
  - publish
  - deploy

before_script:
  - for /f "delims=" %%a in ('gitversion /showvariable fullsemver') do @set CI_COMMIT_VERSION=%%a

build_job:
  stage: build
  script:
    - dotnet sonarscanner begin
      /k:crmsdk
      /v:%CI_COMMIT_VERSION%
      /d:sonar.host.url=%SONAR_URL%
      /d:sonar.login=%SONAR_API_KEY%
      /d:sonar.gitlab.project_id=%CI_PROJECT_PATH%
      /d:sonar.gitlab.commit_sha=%CI_COMMIT_SHA%
      /d:sonar.gitlab.ref_name=%CI_COMMIT_REF_NAME%
      /d:sonar.gitlab.failure_notification_mode=commit-status
      /d:sonar.gitlab.json_mode=CODECLIMATE
      /d:sonar.gitlab.all_issues=false
      /d:sonar.cs.opencover.reportsPaths=%CD%/testResults/coverage.opencover.xml
      /d:sonar.branch.name=%CI_COMMIT_REF_NAME%
    - dotnet build
    - dotnet sonarscanner end /d:sonar.login=%SONAR_API_KEY%
  after_script:
    - rename codeclimate.json gl-code-quality-report.json
  artifacts:
    paths:
      - "*/bin"
      - "*/obj"
      - ".sonarqube"
      - gl-code-quality-report.json

code_quality:
  stage: quality
  variables:
    GIT_STRATEGY: none
  script:
    - echo ok
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

test_job:
  stage: test
  script:
    - dotnet test .\Utilities.CoreTests\DriveCentric.Utilities.CoreTests.csproj
    - dotnet test .\Business\BusinessLogic.CoreTests\DriveCentric.BusinessLogic.CoreTests.csproj
      /p:CollectCoverage=true
      /p:CoverletOutput=%CD%\testResults\
    - dotnet test .\Data\SqlORM.CoreTests\DriveCentric.Data.SqlORM.CoreTests.csproj
      /p:CollectCoverage=true
      /p:CoverletOutputFormat=opencover
      /p:MergeWith=%CD%\testResults\coverage.json
      /p:CoverletOutput=%CD%\testResults\
    - dotnet sonarscanner end /d:sonar.login=%SONAR_API_KEY%
  artifacts:
    paths:
      - "%CD%/testResults"

publish_job:
  stage: publish
  dependencies:
    - build_job
  script:
    - dotnet publish -c release
  artifacts:
    paths:
      - "Services/DriveCentric.TaskService/bin/Release/netcoreapp2.1/publish"

deploy_job:
  stage: deploy
  dependencies:
    - publish_job
  script:
    - C:\Tools\Octo\Octo.exe pack -id Atlas-TaskService --version %CI_COMMIT_VERSION% --basePath Services\DriveCentric.TaskService\bin\Release\netcoreapp2.1\publish
    - C:\Tools\Octo\Octo.exe push --package .//Atlas-TaskService.%CI_COMMIT_VERSION%.nupkg --replace-existing --server https://deploy2.drivecentric.com --apiKey %OCTOPUS_API_KEY%    
